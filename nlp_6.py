# -*- coding: utf-8 -*-
"""NLP_6.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1MNtTREoQHeKmKSV2QUfqGDAAvyC1fQAS
"""

pip install hmmlearn

import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from hmmlearn import hmm

states=["Rainy","Cloudy","Sunny"]
n_states=len(states)
print('Number of hidden states :',n_states)
observation =["Sad ","Happy"]
n_observations = len(observation)
print('Number of observation:',n_observations)

state_probability = np.array([0.5,0.3,0.2])
print("\nstate probability:\n",state_probability)

transition_probability = np.array([[0.5,0.3,0.2],[0.4,0.2,0.4],[0.0,0.3,0.7]])
print("\n Transition probability:\n",transition_probability)

emission_probability = np.array([[0.9,0.1],[0.6,0.4],[0.2,0.8]])
print("\n Emission probability:\n",emission_probability)

model = hmm.CategoricalHMM(n_components=n_states)
model.startprob_ = state_probability
model.transmat_ =transition_probability
model.emissionprob_ = emission_probability

observations_sequence = np.array([0,1,0,1,0,0]).reshape(-1,1)
observations_sequence
for i in observations_sequence:
  if observations_sequence[i]==0:
    print(observation[0])
  else:
     print(observation[1])

#predict the most likely sequence of hidden states
hidden_states = model.predict(observations_sequence)
print("Most likely hidden states:", hidden_states)
for i in hidden_states:
  if hidden_states[i]==0:
   print(states[0])
  else:
   print(states[1])